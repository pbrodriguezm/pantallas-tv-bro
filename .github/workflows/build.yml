name: Build & Sign TV Bro (Release)

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Gradle perms
        run: chmod +x gradlew

      # (Opcional) Si aún no agregaste estas features en el Manifest para TV, descomenta:
      # - name: Patch Manifest for TV (optional)
      #   shell: bash
      #   run: |
      #     MANIFEST="app/src/main/AndroidManifest.xml"
      #     if ! grep -q 'android.hardware.touchscreen' "$MANIFEST"; then
      #       awk '1;/<manifest>/{print "    <uses-feature android:name=\"android.hardware.touchscreen\" android:required=\"false\"/>\n    <uses-feature android:name=\"android.software.leanback\" android:required=\"false\"/>"}' "$MANIFEST" > tmp.xml
      #       mv tmp.xml "$MANIFEST"
      #     fi

      - name: Build Github Release
        run: ./gradlew :app:assembleGithubRelease

      - name: Generate ephemeral release keystore
        run: |
          keytool -genkeypair -v \
            -keystore release.jks \
            -storepass 123456 \
            -keypass 123456 \
            -alias release \
            -keyalg RSA -keysize 2048 -validity 10000 \
            -dname "CN=TVBro, OU=PRL, O=PRL, L=Arequipa, ST=Arequipa, C=PE"

      - name: Sign release (prefer universal, fallback arm64)
        shell: bash
        run: |
          set -e
          BT="$ANDROID_HOME/build-tools/$(ls "$ANDROID_HOME/build-tools" | sort -V | tail -n1)"
          OUT="app/build/outputs/apk/github/release"
          # Ajusta los patrones si tu salida cambia
          APK_UNI=$(ls "$OUT"/*-universal-*-release*.apk 2>/dev/null || true)
          APK_ARM64=$(ls "$OUT"/*-arm64-v8a-*-release*.apk 2>/dev/null || true)
          TARGET=""
          if [ -n "$APK_UNI" ]; then TARGET="$APK_UNI"; fi
          if [ -z "$TARGET" ] && [ -n "$APK_ARM64" ]; then TARGET="$APK_ARM64"; fi
          if [ -z "$TARGET" ]; then
            echo "No se encontró APK universal ni arm64 en $OUT"
            ls -la "$OUT" || true
            exit 1
          fi
          SIGNED="${TARGET%.apk}-signed.apk"
          cp "$TARGET" "$SIGNED"
          "$BT/apksigner" sign \
            --ks release.jks \
            --ks-pass pass:123456 \
            --key-pass pass:123456 \
            --ks-key-alias release \
            "$SIGNED"
          "$BT/apksigner" verify "$SIGNED"
          echo "SIGNED_APK=$SIGNED" >> $GITHUB_ENV

      - name: Upload SIGNED APK
        uses: actions/upload-artifact@v4
        with:
          name: tvbro-release-signed
          path: ${{ env.SIGNED_APK }}
